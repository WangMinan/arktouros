name: "build-and-deploy-frontend"
on:
  push:
    tags:
      # 只有有tag的时候才触发部署操作
      - 'v*'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: Get version from tag
        id: vars
        run: echo "tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Set up Graal JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'      # See 'Options' section below for all supported versions
          distribution: 'graalvm' # See 'Options' section below for all available distributions
          version: '21.0.6'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true -Duse.official.source -T 2C clean package

      - name: Unzip package
        run: tar -zxvf build/arktouros-webapp-leaves.tar.gz -C build/

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Build and push frontend
        id: docker_build_frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/arktouros-ui:${{ steps.vars.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/arktouros-ui:latest

#  deploy-on-remote:
#    runs-on: ubuntu-latest
#    needs: build-and-push-image
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v5
#        with:
#          submodules: 'recursive'
#
#      - name: 传输docker-compose到服务器
#        run: >
#          sshpass -p ${{secrets.REMOTE_PWD}}
#          scp -r -o StrictHostKeyChecking=no deploy/docker-compose.yaml
#          root@${{secrets.REMOTE_IP}}:/root/arktouros
#
#      - name: 传输部署脚本到服务器
#        run: >
#          sshpass -p ${{secrets.REMOTE_PWD}}
#          scp -r -o StrictHostKeyChecking=no deploy/run-frontend.sh
#          root@${{secrets.REMOTE_IP}}:/root/arktouros
#
#      - name: 授权并执行部署脚本
#        run: >
#          sshpass -p ${{secrets.REMOTE_PWD}}
#          ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_IP}}
#          "chmod +x /root/arktouros/run-frontend.sh && /root/arktouros/run-frontend.sh"
#
#  deploy-on-another-remote:
#    runs-on: ubuntu-latest
#    needs: build-and-push-image
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v5
#        with:
#          submodules: 'recursive'
#
#      - name: 写pem到临时文件
#        run: echo "${{secrets.REMOTE_KEY}}" > private_key.pem && chmod 600 private_key.pem
#
#      - name: 传输docker-compose到服务器
#        run: >
#          scp -i private_key.pem -r -o StrictHostKeyChecking=no
#          deploy/docker-compose.yaml
#          root@${{secrets.REMOTE_IP_1}}:/root/arktouros
#
#      - name: 传输部署脚本到服务器
#        run: >
#          scp -i private_key.pem -r -o StrictHostKeyChecking=no
#          deploy/run-frontend.sh
#          root@${{secrets.REMOTE_IP_1}}:/root/arktouros
#
#      - name: 授权并执行部署脚本
#        run: >
#          ssh -i private_key.pem -o StrictHostKeyChecking=no root@${{secrets.REMOTE_IP_1}}
#          "chmod +x /root/arktouros/run-frontend.sh && /root/arktouros/run-frontend.sh"
