<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.npu</groupId>
    <artifactId>arktouros</artifactId>
    <version>0.0.1</version>
    <name>arktouros</name>
    <description>an APM system</description>
    <modules>
        <module>arktouros-collector</module>
        <module>arktouros-apm</module>
        <module>arktouros-protocol</module>
        <module>arktouros-webapp</module>
        <module>arktouros-jacoco-aggregation</module>
    </modules>

    <packaging>pom</packaging>

    <profiles>
        <profile>
            <id>jdk21</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <jdk>21</jdk>
            </activation>
            <properties>
                <maven.compiler.source>21</maven.compiler.source>
                <maven.compiler.target>21</maven.compiler.target>
                <maven.compiler.compilerVersion>21</maven.compiler.compilerVersion>
            </properties>
        </profile>
    </profiles>

    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- maven plugin -->
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <native-maven-plugin.version>0.10.5</native-maven-plugin.version>
        <!-- assembly-plugin用最新的3.7.0会报空指针问题 -->
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-clean-plugin.version>3.4.1</maven-clean-plugin.version>
        <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
        <front-end-maven-plugin.version>1.15.1</front-end-maven-plugin.version>
        <!-- maven plugin -->

        <springboot.version>3.4.3</springboot.version>
        <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
        <lombok.version>1.18.36</lombok.version>
        <snakeyaml.verison>2.4</snakeyaml.verison>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <jackson.version>2.18.3</jackson.version>
        <elasticsearch-java.version>8.14.3</elasticsearch-java.version>
        <armeria.version>1.31.3</armeria.version>

        <!-- commons -->
        <commons-lang3.version>3.17.0</commons-lang3.version>
        <commons-io.version>2.18.0</commons-io.version>
        <commons-pool2.version>2.12.1</commons-pool2.version>
        <!-- commons -->

        <!-- logback -->
        <slf4j.version>2.0.17</slf4j.version>
        <logback.version>1.5.16</logback.version>
        <!-- logback -->

        <!-- grpc -->
        <grpc.version>1.62.2</grpc.version>
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <com.google.protobuf.protoc.version>3.25.3</com.google.protobuf.protoc.version>
        <protoc-gen-grpc-java.plugin.version>1.62.2</protoc-gen-grpc-java.plugin.version>
        <!-- grpc -->

        <!-- UT -->
        <junit-jupiter.version>5.12.0</junit-jupiter.version>
        <mockito.version>5.15.2</mockito.version>
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <testFailureIgnore>true</testFailureIgnore>
        <skipUTs>false</skipUTs>
        <!--        <jacoco.dataFile>${project.build.directory}/jacoco.exec</jacoco.dataFile>-->
        <!--        <jacoco.output.dir>${project.basedir}/jacoco</jacoco.output.dir>-->
        <!-- UT -->

        <delombok.output.dir>${project.build.directory}/delombok</delombok.output.dir>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.verison}</version>
            </dependency>


            <!-- commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <!-- commons -->

            <!-- 数据层 -->
            <dependency>
                <groupId>co.elastic.clients</groupId>
                <artifactId>elasticsearch-java</artifactId>
                <version>${elasticsearch-java.version}</version>
            </dependency>
            <!-- 数据层 -->

            <!-- Unit Test -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Unit Test -->

            <!-- grpc全家桶 -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${com.google.protobuf.protoc.version}</version>
            </dependency>
            <!-- grpc全家桶 -->

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- logback全家桶 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- logback全家桶 -->

            <!-- jackson全家桶 得要 elasticsearch要用到-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- jackson全家桶 -->

            <dependency>
                <groupId>com.linecorp.armeria</groupId>
                <artifactId>armeria</artifactId>
                <version>${armeria.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.aayushatharva.brotli4j</groupId>
                        <artifactId>native-osx-x86_64</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${native-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <skipNativeTests>true</skipNativeTests>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${front-end-maven-plugin.version}</version>
                </plugin>

                <!-- UT -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <!-- UT -->
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>detect</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>${lombok-maven-plugin.version}</version>
                <configuration>
                    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
                    <addOutputDirectory>false</addOutputDirectory>
                    <outputDirectory>${delombok.output.dir}</outputDirectory>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <version>${lombok.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <!-- 删除根目录下的build文件夹 -->
                            <directory>${project.basedir}/build/</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <!--first execution: for preparing JaCoCo runtime agent-->
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <!--second execution: for creating code coverage reports-->
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- protobuf自动生成文件不测 -->
                            <excludes>edu.npu.arktouros.proto.*</excludes>
                            <excludes>io.opentelemetry.proto.*</excludes>
                            <!-- 实体类按照惯例不测 -->
                            <excludes>edu.npu.arktouros.model.*</excludes>
                            <!-- 接口走集成测试 -->
                            <excludes>edu.npu.arktouros.controller.*</excludes>
                            <!-- h2链路暂时不实现 -->
                            <excludes>edu.npu.arktouros.mapper.otel.search.h2.*</excludes>
                            <excludes>edu.npu.arktouros.service.otel.sinker.h2.*</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <testFailureIgnore>${testFailureIgnore}</testFailureIgnore>
                    <skip>${skipUTs}</skip>
                    <!-- 使用@argLine引入参数 否则冲突 -->
                    <argLine>
                        @{argLine} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens
                        java.base/java.lang.reflect=ALL-UNNAMED
                    </argLine>
                    <forkCount>1C</forkCount> <!-- 根据CPU核心数创建相应数量的线程 -->
                    <reuseForks>false</reuseForks> <!-- 设置为false以确保每个测试类都在新的JVM进程中运行 -->
                    <parallel>all</parallel> <!-- 并行模式 -->
                    <perCoreThreadCount>true</perCoreThreadCount> <!-- 启用每核心线程数的计算 -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>
                        @{argLine} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens
                        java.base/java.lang.reflect=ALL-UNNAMED
                    </argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
