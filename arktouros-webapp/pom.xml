<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 这玩意的编译在我的本地机器上会抽风 导致无法正常启动 建议在Linux上进行调试 -->
    <parent>
        <groupId>edu.npu</groupId>
        <artifactId>arktouros</artifactId>
        <version>0.0.1</version>
    </parent>

    <artifactId>arktouros-webapp</artifactId>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <version>${native-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>test-native</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <fallback>false</fallback>
                            <imageName>${project.artifactId}</imageName>
                            <mainClass>${mainClass}</mainClass>
                            <verbose>true</verbose>
                            <!-- For Quick Build (22.1+) -->
                            <quickBuild>true</quickBuild>
                            <buildArgs>
                                <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <!-- For mostly static native image (only on Linux AMD64 systems) -->
                                <buildArg>-H:+StaticExecutableWithDynamicLibC</buildArg>
                                <!-- To generate the Native Image build output JSON (22.3+) -->
                                <buildArg>-H:BuildOutputJSONFile=build.json</buildArg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <properties>
        <mainClass>edu.npu.arktouros.ApplicationStartUp</mainClass>
        <ui.path>${project.parent.basedir}/arktouros-ui</ui.path>
    </properties>

    <dependencies>
        <!-- armeria line开源的下一代高性能服务器 -->
        <dependency>
            <groupId>com.linecorp.armeria</groupId>
            <artifactId>armeria</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.aayushatharva.brotli4j</groupId>
                    <artifactId>native-osx-x86_64</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- logback全家桶 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <!-- logback全家桶 -->

        <!-- commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- commons -->

        <!-- Unit Test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Unit Test -->

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>arktouros-webapp</finalName>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <workingDirectory>${ui.path}</workingDirectory>
                    <nodeVersion>v20.17.0</nodeVersion>
                    <!-- 引入阿里云源 -->
                    <nodeDownloadRoot>https://mirrors.aliyun.com/nodejs-release/</nodeDownloadRoot>
                    <npmDownloadRoot>https://registry.npmmirror.com/npm/-/</npmDownloadRoot>
                </configuration>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                            <!-- 引入阿里云源 -->
                            <npmRegistryURL>https://registry.npmmirror.com/</npmRegistryURL>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <resources>
                        <resource>
                            <targetPath>${basedir}/target/classes/public</targetPath>
                            <directory>${ui.path}/dist</directory>
                        </resource>
                        <resource>
                            <targetPath>${basedir}/target/classes</targetPath>
                            <directory>src/main/resources</directory>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                        <!-- 指定配置文件所在的文件夹 -->
                        <manifestEntries>
                            <Class-Path>config/</Class-Path>
                        </manifestEntries>
                    </archive>
                    <!--将配置文件排除掉，不打包到jar文件内-->
                    <excludes>
                        <exclude>*.properties</exclude>
                        <exclude>**/*.properties</exclude>
                        <exclude>*.yaml</exclude>
                        <exclude>*.yml</exclude>
                        <exclude>*.xml</exclude>
                        <exclude>**/*.xml</exclude>
                        <exclude>*.conf</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- assembly插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}</finalName>
                    <!--指定assembly配置文件配置-->
                    <descriptors>
                        <descriptor>/src/main/resources/assembly.xml</descriptor>
                    </descriptors>
                    <!--打包tar.gz输出位置-->
                    <outputDirectory>../build</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
